{"version":3,"sources":["apiKeys.js","components/searchbar.js","components/weather-data.js","components/main-card.js","app.js","index.js"],"names":["module","exports","SearchBar","props","state","handleSubmit","bind","handleChange","e","this","preventDefault","value","onSubmit","className","type","placeholder","onChange","React","Component","location","a","url","keys","openWeatherKey","fetch","mode","data","json","result","console","log","MainCard","icon","temp","description","humidity","wind","placeName","updateData","prevProps","getWeatherData","then","place","name","main","speed","weather","setState","err","alert","str","replace","txt","charAt","toUpperCase","substr","toLowerCase","Math","round","format","Date","getFormattedDate","src","kelvinToFahrenheit","toTitleCase","mpsTomph","App","searchbarText","handleSearchSubmit","handleSearchChange","newLocation","text","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a70a1db1.chunk.js","sourcesContent":["module.exports = {\n    \"openWeatherKey\" : 'a3b420feb1e9b6a437ec0d050cc09b21'\n}\n\n","import React from 'react';\nimport './searchbar.css';\n\nclass SearchBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        this.props.handleChange(e);\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        if (this.props.value === '') {return};\n        this.props.handleSubmit(e);\n    }\n\n    render() {\n        return (\n            <form onSubmit = {this.handleSubmit}>\n                <div className = {'row border-bar'}>\n                    <input \n                        type = {'text'} \n                        placeholder = {'Search for a City'} \n                        onChange = {this.handleChange}\n                        value = {this.props.value} />\n                    \n                    <button \n                    type = {'submit'} className = {'button-blank'}>\n                        <i className = {'fa fa-search button-icon'} />\n                    </button>\n                </div>\n            </form>\n        )\n    }\n}\n\n\nexport default SearchBar;","import keys from '../apiKeys'\nexport default async function getWeatherData(location) {\n\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${keys.openWeatherKey}`;\n    try {\n        let data = await fetch(url, {mode: 'cors'});\n        const result = await data.json();\n        return result;\n    } catch (error) {\n        console.log(error)\n    }\n\n}\n\n","import React from 'react';\nimport getWeatherData from './weather-data'\nimport './main-card.css';\nimport {format} from 'date-fns';\n\n\nclass MainCard extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            icon: '',\n            temp: '',\n            description: '',\n            humidity: '',\n            wind: '',\n            placeName: '',\n\n        }\n        this.updateData = this.updateData.bind(this);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.location !== this.props.location) {\n            this.updateData(this.props.location);\n        }\n    }\n\n    componentDidMount() {\n        this.updateData(this.props.location);\n    }\n\n    updateData(location) {\n        getWeatherData(location).then( (data) => {\n            \n            try {            \n                const place = data.name;\n                const temp = data.main.temp;\n                const humidity = data.main.humidity;\n                const wind = data.wind.speed;\n                const description = data.weather[0].description;\n                const icon = data.weather[0].icon;\n    \n                this.setState({\n                    icon: icon,\n                    temp: temp,\n                    humidity: humidity,\n                    wind: wind,\n                    description: description,\n                    placeName: place,\n                }); }\n                catch (err) {\n                    alert(\"Enter 'City', 'City,Country' or 'City,State,Country'\")\n                }\n        });\n    }\n\n    toTitleCase(str) {\n        return str.replace(\n            /\\w\\S*/g,\n            function(txt) {\n                return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n            }\n        );\n    }\n\n    kelvinToCelsius(temp) {\n        return Math.round((temp-273.15));\n    }\n\n    kelvinToFahrenheit(temp) {\n        return Math.round((temp - 273.15)*9/5 +32 );\n    }\n\n    mpsTomph(speed) {\n        return Math.round(speed*2.23694*10)/10;\n    }\n\n    getFormattedDate() {\n        return format(new Date(), 'EEE, LLLL d')\n    }\n\n    render() {\n        return (\n            <div className = {'card'}>\n                <h1>{this.state.placeName}</h1>\n                <h4>{this.getFormattedDate()}</h4>\n                <img src = {`http://openweathermap.org/img/wn/${this.state.icon}@2x.png`} />\n                <h1 className ={'thin-font'}>{ <>{this.kelvinToFahrenheit(this.state.temp)}&deg;F </>}</h1>\n                <p> {this.toTitleCase(this.state.description)}</p>\n                <span className = {'row row-spaced'}>\n                    <div className = {'col col-spaced'}>\n                        <div>Humidity</div>\n                        <div className = {'fontsize10'}>{this.state.humidity}%</div>\n                    </div>\n                    <div className = {'col col-spaced'}>\n                        <div>Wind</div>\n                        <div className = {'fontsize10'}>{this.mpsTomph(this.state.wind)} mph</div>\n                    </div>\n                </span>\n\n            </div>\n        )\n    }\n\n}\n\nexport default MainCard;","import React from 'react';\nimport SearchBar from './components/searchbar';\nimport MainCard from './components/main-card';\n\n\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            searchbarText: '',\n            location: 'Houston,tx,us',\n        }\n\n        this.handleSearchSubmit = this.handleSearchSubmit.bind(this);\n        this.handleSearchChange = this.handleSearchChange.bind(this);\n    }\n\n    handleSearchSubmit() {\n\n        let newLocation = this.state.searchbarText;\n        this.setState({\n            location: newLocation,\n            searchbarText: ''\n        });\n    }\n\n    handleSearchChange(e) {\n        let text = e.target.value;\n        this.setState({searchbarText: text})\n    }\n\n    render() {\n        return (\n            <div className = {'container'}>\n                <SearchBar \n                handleChange = {this.handleSearchChange}\n                handleSubmit = {this.handleSearchSubmit}\n                value = {this.state.searchbarText} />\n\n                <MainCard location = {this.state.location}/>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app'\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n\n"],"sourceRoot":""}